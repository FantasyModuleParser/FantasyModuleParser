using FantasyModuleParser.NPC;
using FantasyModuleParser.NPC.Models.Action;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FantasyModuleParser.Importer.NPC
{
    public class ImportEngineerSuiteNPC
    {
        public ImportEngineerSuiteNPC()
        {

        }

        /// <summary>
        /// Parses & Imports data from .npc files generated by Engineer Suite - NPC Module by Maasq
        /// </summary>
        /// <param name="engineerSuiteNpcFileContent">The file content of an *.npc file created by the NPC Engineer module in Engineer Suite</param>
        /// <returns></returns>
        public NPCModel ParseEngineerSuiteNPCContent(string engineerSuiteNpcFileContent)
        {
            NPCModel parsedNPCModel = new NPCModel();
            return parsedNPCModel;
        }

        /// <summary>
        /// 'Tiny beast (devil), lawful neutral'
        /// </summary>
        public string ParseSizeAndAlignment(NPCModel npcModel, string sizeAndAlignment)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Armor Class 16'
        /// </summary>
        public string ParseArmorClass(NPCModel npcModel, string armorClass)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Hit Points 90 (10d8 + 44)'
        /// </summary>
        public string ParseHitPoints(NPCModel npcModel, string hitPoints)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Speed 10 ft., burrow 20 ft., climb 30 ft., fly 40 ft. (hover), swim 50 ft.'
        /// </summary>
        public string ParseSpeedAttributes(NPCModel npcModel, string speedAttributes)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'STR DEX CON INT WIS CHA 10 (+0) 11 (+0) 12 (+1) 13 (+1) 14 (+2) 15 (+2)'
        /// </summary>
        public string ParseStatAttributes(NPCModel npcModel, string statAttributes)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Saving Throws Str +1, Dex +2, Con +3, Int +0, Wis +5, Cha +6'
        /// </summary>
        public string ParseSavingThrows(NPCModel npcModel, string savingThrows)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Skills Acrobatics +1, Animal Handling +2, Arcana +3, Athletics +4, Deception +5, History +6, Insight +7, Intimidation +8, Investigation +9, Medicine +10, Nature +11, Perception +12, Performance +13, Persuasion +14, Religion +15, Sleight of Hand +16, Stealth +17, Survival +18'
        /// </summary>
        public string ParseSkillAttributes(NPCModel npcModel, string skillAttributes)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Damage Vulnerabilities acid, fire, lightning, poison, radiant; bludgeoning and slashing'
        /// </summary>
        public string ParseDamageVulnerabilities(NPCModel npcModel, string damageVulnerabilites)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Damage Resistances cold, force, necrotic, psychic, thunder from nonmagical weapons'
        /// </summary>
        public string ParseDamageResistances(NPCModel npcModel, string damageResistances)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Damage Immunities acid, force, poison, thunder; slashing from nonmagical weapons that aren't silvered'
        /// </summary>
        public string ParseDamageImmunities(NPCModel npcModel, string damageImmunities)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Condition Immunities blinded, frightened, invisible, paralyzed, prone, restrained'
        /// </summary>
        public string ParseConditionImmunities(NPCModel npcModel, string conditionImmunities)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Senses blindsight 60 ft. (blind beyond this radius), darkvision 70 ft., tremorsense 80 ft., truesight 90 ft., passive Perception 22'
        /// </summary>
        public string ParseVisionAttributes(NPCModel npcModel, string visionAttributes)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Languages Aarakocra, Bullywug, Celestial, Common, Draconic, Elvish, Gnomish, Grell, Halfling, Ice toad, Infernal, Modron, Slaad, Sylvan, Thieves' cant, Thri-kreen, Umber hulk, telepathy 90'
        /// </summary>
        public string ParseLanguages(NPCModel npcModel, string languages)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Challenge 8 (3,900 XP)'
        /// </summary>
        public string ParseChallengeRatingAndXP(NPCModel npcModel, string challengeRatingAndXP)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Trait Number 1. Some trait goes here for flavor Anger. This NPC gets angry very, very easily Unit Test. Unit Test the third'
        /// </summary>
        public string ParseTraits(NPCModel npcModel, string traits)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Spellcasting. V1_npc_all is an 18th-level spellcaster. His spellcasting ability is Constitution (spell save DC 8, +12 to hit with spell attacks). V1_npc_all has the following Sorcerer spells prepared:\rCantrips (At will): Cantrips1\r1st level (9 slots): Spell 1st\r2nd level (8 slots): Spell 2nd\r3rd level (7 slots): Spell 3rd\r4th level (6 slots): Spell 4th\r5th level (5 slots): Spell 5th\r6th level (4 slots): Spell 6th\r7th level (3 slots): Spell 7th\r8th level (2 slots): Spell 8th\r9th level (1 slot): Spell 9th\r*Spell 2nd'
        /// </summary>
        public string ParseSpellCastingAttributes(NPCModel npcModel, string spellCastingAttributes)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Multiattack. .This creature makes 3 attacks.'
        /// </summary>
        public string ParseStandardAction(NPCModel npcModel, string standardAction)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Parry. You know what it does.. NINJA DODGE.'
        /// </summary>
        public string ParseReaction(NPCModel npcModel, string reaction)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Options. This creature has 5 legendary actions.'
        /// </summary>
        public string ParseLegendaryAction(NPCModel npcModel, string legendaryAction)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// 'Options. This creature has 5 legendary actions.'
        /// </summary>
        public string ParseLairAction(NPCModel npcModel, string lairAction)
        {
            throw new NotImplementedException();
        }
    }
}
