<UserControl x:Class="FantasyModuleParser.Classes.UserControls.ClassSpecializationUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FantasyModuleParser.Classes.UserControls"
             xmlns:sharedUC="clr-namespace:FantasyModuleParser.Equipment.UserControls"
             xmlns:classModel="clr-namespace:FantasyModuleParser.Classes.Model"
             xmlns:vm="clr-namespace:FantasyModuleParser.Classes.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="480" d:DesignWidth="450">
    <UserControl.DataContext>
        <vm:ClassSpecializationViewModel></vm:ClassSpecializationViewModel>
    </UserControl.DataContext>
    <Grid x:Name="ClassSpecializationLayout">
        <TabControl>
            <TabItem Header="Class Feature" IsEnabled="True" HorizontalAlignment="Left">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Class Specialization Name" Grid.Row="0" Grid.Column="0" />
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding SelectedClassSpecializationName, UpdateSourceTrigger=PropertyChanged}" />

                        <Button Grid.Row="1" Grid.Column="1"  Content="Clear Feature" HorizontalAlignment="Left" />

                        <Button Grid.Row="1" Grid.Column="1"  Content="Add / Update Specialization" 
                                HorizontalAlignment="Right" Padding="5,0"
                                Command="{Binding AddClassSpecializationCommand}"/>
                    </Grid>
                    <Separator Grid.Row="1" />
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="221*"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="96*"/>
                            <ColumnDefinition Width="125*"/>
                        </Grid.ColumnDefinitions>

                        <Label Content="Existing Class Specializations" Grid.Row="0" FontWeight="Bold" Grid.ColumnSpan="2" Margin="0,0,1.667,0" />

                         <!--TODO:  For each item in this list box, there should two buttons that are right justified:
                                    1. Rename
                                    2. Remove-->
                        

                         <ListBox Grid.Row="1"/>
                        <ListBox Grid.Row="1" ItemsSource="{Binding ClassModelValue.ClassSpecializations }"
                                 SelectionMode="Single" HorizontalContentAlignment="Stretch"
                                 SelectedValue="{Binding SelectedClassSpecialization}"
                                 Grid.ColumnSpan="2" >
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type classModel:ClassSpecialization}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="80"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Name}"  />
                                        <Button Content="Remove" Grid.Column="3"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}, Mode=FindAncestor}, 
                                                            Path=DataContext.RemoveClassSpecializationCommand}"
                                                CommandParameter="{Binding}"></Button> 
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <Label Content="Features from Selected Specialization" Grid.Row="0" Grid.Column="2" FontWeight="Bold" Grid.ColumnSpan="2" Margin="0.333,0,0.334,0" />

                         <!--TODO:  This listbox is populated by the selected Specialization's attached features--> 
                         <!--TODO:  Consider an 'Unassigned' option for Specialization... or maybe the Class name as a default option?--> 
                        <ListBox Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" 
                                 ItemsSource="{Binding SelectedClassSpecialization.ClassFeatures}"
                                 DisplayMemberPath="Name"/>
                    </Grid>
                </Grid>

            </TabItem>
            <TabItem Header="{Binding TabDescriptionLabel}" IsEnabled="{Binding IsClassSpecialSelected}" HorizontalAlignment="Left">
                <sharedUC:GenericDescriptionUC Margin="0" Padding="0"
                                               DescriptionText="{Binding SelectedClassSpecializationDescription, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
