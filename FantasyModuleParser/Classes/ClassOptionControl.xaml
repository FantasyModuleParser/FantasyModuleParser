<UserControl x:Class="FantasyModuleParser.Classes.ClassOptionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FantasyModuleParser.Classes"
             xmlns:ClassUC="clr-namespace:FantasyModuleParser.Classes.UserControls"
             xmlns:equipmentUC="clr-namespace:FantasyModuleParser.Equipment.UserControls"
             xmlns:extension="clr-namespace:FantasyModuleParser.Extensions"
             xmlns:classEnum="clr-namespace:FantasyModuleParser.Classes.Enums"
             xmlns:classViewModel="clr-namespace:FantasyModuleParser.Classes.ViewModels"
             xmlns:sharedUserControl="clr-namespace:FantasyModuleParser.Equipment.UserControls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:sharedUC="clr-namespace:FantasyModuleParser.Equipment.UserControls"
             xmlns:classModel="clr-namespace:FantasyModuleParser.Classes.Model"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="600">
    <UserControl.DataContext>
        <classViewModel:ClassOptionControllViewModel/>
    </UserControl.DataContext>
    <Grid Background="AliceBlue">
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="480" />
            <RowDefinition Height="160" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <ClassUC:ClassHeaderUC ClassModelName="{Binding ParentClassModel.Name}"
                                   HitDiePerLevel="{Binding ParentClassModel.HitPointDiePerLevel}"
                                   IsLocked="{Binding ParentClassModel.IsLocked, Mode=TwoWay}"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="450" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">

                <!--                        <ListBox Name="PrimaryEquipmentTypeListBox" Margin="0,5,5,5"
                                 ItemsSource="{Binding Source={extension:Enumeration {x:Type equipmentEnum:PrimaryEquipmentEnum}}}" 
                                 SelectedValuePath="Value" DisplayMemberPath="Description"
                                 SelectedValue="{Binding PrimaryEquipmentType}"></ListBox> -->
                <ListBox Name="ClassMenuOptionListBox"
                         ItemsSource="{Binding Source={extension:Enumeration {x:Type classEnum:ClassMenuOptionEnum}}}"
                         SelectedValuePath="Value" DisplayMemberPath="Description"
                         SelectedValue="{Binding ClassMenuOptionEnum}"/>
            </Grid>
            <Grid Grid.Column="1">

                <!-- ================================== -->
                <!-- Class Option Menu - User Controls -->
                <!-- ================================== -->

                <!-- Proficiency Bonus -->
                <ClassUC:ClassProficiencyBonusUC x:Name="ClassProficiencyBonusUserControl" ClassModelValue="{Binding ParentClassModel, Mode=TwoWay}">
                    <ClassUC:ClassProficiencyBonusUC.Style>
                        <Style TargetType="{x:Type ClassUC:ClassProficiencyBonusUC}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.ProficiencyBonus}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ClassUC:ClassProficiencyBonusUC.Style>
                </ClassUC:ClassProficiencyBonusUC>
                
                <!-- Spell Slots -->
                <ClassUC:ClassSpellSlotUC x:Name="ClassSpellSlotUserControl" ClassModelValue="{Binding ParentClassModel, Mode=TwoWay}">
                    <ClassUC:ClassSpellSlotUC.Style>
                        <Style TargetType="{x:Type ClassUC:ClassSpellSlotUC}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.SpellSlots}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ClassUC:ClassSpellSlotUC.Style>
                </ClassUC:ClassSpellSlotUC>
                <!-- Proficiencies -->
                <ClassUC:ClassProficiencyUC x:Name="ClassProficencyUserControl" ProficiencyModelValue="{Binding Proficiency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsMultiProficiencyOptionValue="Visible">
                    <ClassUC:ClassProficiencyUC.Style>
                        <Style TargetType="{x:Type ClassUC:ClassProficiencyUC}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.Proficiencies}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ClassUC:ClassProficiencyUC.Style>
                </ClassUC:ClassProficiencyUC>
                
                <!-- TODO:  Multiclass Proficiencies -->
                <ClassUC:ClassProficiencyUC x:Name="MultiClassProficencyUserControl" ProficiencyModelValue="{Binding MultiProficiency}" IsMultiProficiencyOptionValue="Hidden">
                    <ClassUC:ClassProficiencyUC.Style>
                        <Style TargetType="{x:Type ClassUC:ClassProficiencyUC}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.MulticlassProficiencies}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ClassUC:ClassProficiencyUC.Style>
                </ClassUC:ClassProficiencyUC>

                <!-- Class Features -->
                <TabControl>
                    <TabControl.Style>
                        <Style TargetType="{x:Type TabControl}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.ClassFeatures}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TabControl.Style>
                    <TabItem Header="Class Feature" IsEnabled="True" HorizontalAlignment="Left">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="120"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="86.667" />
                                    <ColumnDefinition Width="33.333"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Class Feature Name" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" />
                                <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding SelectedClassFeature.Name, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Content="Level" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" />
                                <ComboBox Grid.Row="1" Grid.Column="2" SelectedValue="{Binding SelectedClassFeature.Level}" SelectedIndex="0">
                                    <sys:Int32>1</sys:Int32>
                                    <sys:Int32>2</sys:Int32>
                                    <sys:Int32>3</sys:Int32>
                                    <sys:Int32>4</sys:Int32>
                                    <sys:Int32>5</sys:Int32>
                                    <sys:Int32>6</sys:Int32>
                                    <sys:Int32>7</sys:Int32>
                                    <sys:Int32>8</sys:Int32>
                                    <sys:Int32>9</sys:Int32>
                                    <sys:Int32>10</sys:Int32>
                                    <sys:Int32>11</sys:Int32>
                                    <sys:Int32>12</sys:Int32>
                                    <sys:Int32>13</sys:Int32>
                                    <sys:Int32>14</sys:Int32>
                                    <sys:Int32>15</sys:Int32>
                                    <sys:Int32>16</sys:Int32>
                                    <sys:Int32>17</sys:Int32>
                                    <sys:Int32>18</sys:Int32>
                                    <sys:Int32>19</sys:Int32>
                                    <sys:Int32>20</sys:Int32>
                                </ComboBox>

                                <!-- <TextBlock Text="Subclass Feature (OPTIONAL)" Grid.Row="2" Grid.Column="0" TextWrapping="Wrap" Grid.ColumnSpan="2"/> -->
                                <!-- <ComboBox Grid.Row="2" Grid.Column="2" IsEnabled="True" -->
                                <!--           ItemsSource="{Binding Path=ClassModelValue.ClassSpecializations}" -->
                                <!--           SelectedValue="{Binding Path=SelectedClassSpecialization}" -->
                                <!--           DisplayMemberPath="Name"/> -->

                                <Button Grid.Row="3" Grid.Column="2"  Content="Clear Feature" HorizontalAlignment="Left"
                                        Command="{Binding ClearSelectedClassFeatureCommand}"/>
                                <Button Grid.Row="3" Grid.Column="2"  Content="Add / Update Feature" HorizontalAlignment="Right"
                                        Command="{Binding AddClassFeatureCommand}"
                                        CommandParameter="{Binding SelectedClassFeature.Name}"/>
                            </Grid>
                            <Separator Grid.Row="1" />
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>

                                <Label Content="Existing Class Features" Grid.Row="0" FontWeight="Bold" />
                                <ListBox x:Name="ClassFeatureListBox"
                                 Grid.Row="1" ItemsSource="{Binding ParentClassModel.ClassFeatures, Mode=TwoWay}"
                                 SelectionMode="Single" HorizontalContentAlignment="Stretch"
                                         SelectedValue="{Binding SelectedClassFeature}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type classModel:ClassFeature}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                                    <ColumnDefinition Width="80"></ColumnDefinition>
                                                    <ColumnDefinition Width="30"></ColumnDefinition>
                                                    <ColumnDefinition Width="80"></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Name}"  />
                                                <Label Content="Level: " Grid.Column="1" />
                                                <TextBlock Text="{Binding Level}" Grid.Column="2" />
                                                <Button Content="Remove" Grid.Column="3"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}, Mode=FindAncestor}, 
                                                                    Path=DataContext.RemoveClassFeatureCommand}"
                                                        CommandParameter="{Binding}"></Button>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Name="FeaturnSpecialNameMenuItem">
                                                <MenuItem.Style>
                                                    <Style TargetType="{x:Type MenuItem}">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="Background" Value="Yellow"></Setter>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                            <MenuItem Header="Un-Assign"
                                              Command="{Binding Path=UnAssignClassSpecializationCommand}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}},
                                                    Path=SelectedValue}"></MenuItem>
                                            <MenuItem Header="Assign To Specialization"
                                              ItemsSource="{Binding Path=ClassModelValue.ClassSpecializations}"
                                              DisplayMemberPath="Name">
                                                <MenuItem.ItemContainerStyle>
                                                    <Style TargetType="{x:Type MenuItem}">
                                                        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, 
                                                    Path=PlacementTarget.DataContext.AssignClassSpecializationCommand}"/>
                                                        <Setter Property="CommandParameter"
                                                        Value="{Binding}" />
                                                    </Style>
                                                </MenuItem.ItemContainerStyle>
                                            </MenuItem>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                            </Grid>
                        </Grid>

                    </TabItem>
                    <TabItem Header="{Binding SelectedClassFeatureDescription}" HorizontalAlignment="Left" >
                        <sharedUC:GenericDescriptionUC Margin="0" Padding="0" DescriptionText="{Binding SelectedClassFeature.Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" />
                    </TabItem>
                </TabControl>

                <!-- TODO:  Class Specialization -->
                <ClassUC:ClassSpecializationUC x:Name="ClassSpecializationUserControl" ClassModelValue="{Binding ParentClassModel, Mode=TwoWay}">
                    <ClassUC:ClassSpecializationUC.Style>
                        <Style TargetType="{x:Type ClassUC:ClassSpecializationUC}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.ClassSpecialization}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ClassUC:ClassSpecializationUC.Style>
                </ClassUC:ClassSpecializationUC>
                <!-- TODO:  Starting Equipment -->
                <sharedUserControl:GenericDescriptionUC x:Name="StartingEquipmentUserControl" DescriptionText="{Binding StartingEquipment}" >
                    <sharedUserControl:GenericDescriptionUC.Style>
                        <Style TargetType="{x:Type sharedUserControl:GenericDescriptionUC}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.StartingEquipment}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </sharedUserControl:GenericDescriptionUC.Style>
                </sharedUserControl:GenericDescriptionUC>


                <!-- TODO:  Class Description -->
                <sharedUserControl:GenericDescriptionUC x:Name="ClassDescriptionUserControl" DescriptionText="{Binding ParentClassModel.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <sharedUserControl:GenericDescriptionUC.Style>
                        <Style TargetType="{x:Type sharedUserControl:GenericDescriptionUC}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.ClassDescription}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </sharedUserControl:GenericDescriptionUC.Style>
                </sharedUserControl:GenericDescriptionUC>
                
                <!-- TODO:  Class Image -->
                <sharedUserControl:GenericImageUserControl x:Name="ClassImageUserControl" LabelNameText="Class Image Filepath:">
                    <sharedUserControl:GenericImageUserControl.Style>
                        <Style TargetType="{x:Type sharedUserControl:GenericImageUserControl}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ClassMenuOptionEnum}"
                                                         Value="{x:Static classEnum:ClassMenuOptionEnum.ClassImage}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </sharedUserControl:GenericImageUserControl.Style>
                </sharedUserControl:GenericImageUserControl>
            </Grid>
        </Grid>
        <!--<equipmentUC:EquipmentFooterUC Grid.Row="2" 
                                       ActionButtonLabel="Equipment"
                                        AddToProjectAction="EquipmentFooterUC_AddToProjectAction"
                                       NewItemAction="EquipmentFooterUC_NewItemAction"
                                        LoadEquipmentAction="EquipmentFooterUC_LoadEquipmentAction"
                                        SaveEquipmentAction="EquipmentFooterUC_SaveEquipmentAction"
                                       SelectedItemModelChangeAction="EquipmentFooterUC_SelectedItemModelChangeAction"
                                        ModuleCategoryItemSource="{Binding ModuleCategoriesSource}"
                                       SelectedCategoryModel="{Binding SelectedCategoryModel, Mode=TwoWay}"
                                       SelectedItemModel="{Binding SelectedFooterItemModel, Mode=TwoWay}"
                                        Grid.ColumnSpan="2" Margin="0,0,0.333,0"/>-->
        <!-- FIXME:  Missing all of the UI implementation code for interaction!! See above commented out code for examples-->
        <!-- Note that this comes from the Equipment UserControl folder for more code reference -->
        <equipmentUC:EquipmentFooterUC Grid.Row="2" ActionButtonLabel="Class"
                                       AddToProjectAction="AddToProjectAction"
                                       NewItemAction="NewItemAction"
                                       SelectedItemModelChangeAction="SelectedItemModelChangeAction"
                                       ModuleCategoryItemSource="{Binding ModuleCategoriesSource}"
                                       SelectedCategoryModel="{Binding SelectedCategoryModel, Mode=TwoWay}"
                                       SelectedItemModel="{Binding SelectedFooterItemModel, Mode=TwoWay}"
                                       SaveEquipmentAction="EquipmentFooterUC_SaveEquipmentAction"/>
    </Grid>
</UserControl>
